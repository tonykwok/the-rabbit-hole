<?xml version="1.0"?>
<project name="furbelow" default="default" basedir=".">
  <description>
  Furbelow Java build file (Ant 1.5)
  Conventions (since ant can't easily specify arbitrary file dependencies):
  The uptodate property for a given target TARGET is "-TARGET"; the actual
  target to generate the uptodate property is named ":TARGET".

  Properties (except for uptodate properties) separate words by dots, targets
  by dashes. 
  </description>
  <!-- global properties -->
  <!-- (all build-related props should go in dynamic-properties) -->
  <tstamp>
    <format property="rev" pattern="yyMMddHHmm"  timezone="GMT"/>
  </tstamp>
  <property name="version" value="1.0"/>
  <property name="debug" value="on"/>
  <property name="jdk-version" value="1.4"/>
  <property name="src" location="src"/>
  <property name="test.src" location="test"/>
  <property name="doc" location="doc"/>
  <property name="reports" value="${doc}/reports"/>
  <!-- TODO need a company-wide javadoc stylesheet -->
  <property name="stylesheet" location="${root}/doc/css/javadoc.css"/>
  <property name="name" value="core"/>
  <property name="company" value="Technomage"/>
  <property name="company.full" value="Timothy Wall"/>
  <property name="copyright"
            value="Copyright &amp;copy; 1999-2007 ${company.full}. All Rights Reserved."/>

  <!-- Miscellaneous -->
  <property name="build.compiler.emacs" value="true"/>
  <target name="default" depends="jar" description="Build main jar file."/>

  <target name="dynamic-properties">
    <echo>Java version: ${java.version}</echo>
    <tstamp><format property="date" pattern="yyMMdd"/></tstamp>

    <property name="build" location="build"/>
    <property name="classes" location="${build}/classes"/>
    <property name="test.classes" location="${build}/test-classes"/>

    <mkdir dir="${build}"/>
    <mkdir dir="${classes}"/>
    <mkdir dir="${test.classes}"/>
    <mkdir dir="${doc}"/>
  </target>

  <target name="setup" depends="dynamic-properties">
    <path id="compile-test.path">
      <pathelement path="${test.src}"/>
      <path id="test.libs">
        <fileset dir="lib">
          <patternset id="test-tp-jars">
            <include name="junit-3.8.1.jar"/>   
            <include name="abbot.jar"/>
          </patternset>
        </fileset>
        <pathelement path="${classes}"/>
      </path>
      <path id="compile.path">
        <path id="src.path">
          <pathelement location="${src}"/>
          <path id="libs">
            <fileset dir="lib">
              <patternset id="tp-jars">
                <include name="allClasses.jar"/>
              </patternset>
            </fileset>
          </path>
        </path>
      </path>                           
    </path>                           

    <!-- copy all jars to the build area for ready access. -->
    <copy todir="${build}" flatten="true">
      <fileset dir="lib"><patternset refid="test-tp-jars"/></fileset>
      <fileset dir="lib"><patternset refid="tp-jars"/></fileset>
    </copy>

    <path id="test.runpath">
      <pathelement path="${classes}"/>
      <pathelement path="${test.classes}"/>
      <fileset dir="${build}">
        <patternset>
          <include name="*.jar"/>
        </patternset>
      </fileset>
      <pathelement path="${ant.home}/lib/clover.jar"/>
    </path>
  </target>

  <target name="compile" depends="setup"
          description="Compile all Java source">
    <javac classpathref="compile.path"
           source="${jdk-version}"
           target="${jdk-version}"
           destdir="${classes}" 
           deprecation="on" debug="${debug}">
      <src path="${src}"/>
    </javac>
    <copy toDir="${classes}">
      <fileset dir="${src}">
        <patternset id="misc-files">
          <include name="**/*.png"/>
          <include name="**/*.gif"/>
          <include name="**/*.properties"/>
        </patternset>
      </fileset>
    </copy>
  </target>

  <target name=":jar">
    <condition property="-jar">
      <and>
        <uptodate targetfile="${build}/${name}.jar">
          <srcfiles dir="${classes}">
            <patternset refid="misc-files"/>
          </srcfiles>
          <srcfiles dir="${classes}">
            <patternset id="jar-compiled">
              <include name="**/*.class"/>
            </patternset>
          </srcfiles>
        </uptodate>
      </and>
    </condition>
  </target>
  <target name="jar" depends="setup,compile-tests,:jar" unless="-jar"
          description="Build ${name}.jar">
    <jar jarfile="${build}/${name}.jar">
      <manifest>
        <attribute name="Class-Path" value="bsh.jar"/>
        <attribute name="Implementation-Vendor" value="${company.full}"/>
        <attribute name="Implementation-Version" value="${version}"/>
        <attribute name="Specification-Vendor" value="${company.full}"/>
        <attribute name="Specification-Version" value="${version}"/>
      </manifest>
      <fileset dir="${classes}"><patternset refid="jar-compiled"/></fileset>
      <fileset dir="${classes}"><patternset refid="misc-files"/></fileset>
    </jar>
    <jar jarfile="${build}/${name}-test.jar">
      <fileset dir="${test.classes}"><patternset refid="jar-compiled"/></fileset>
    </jar>
  </target>

  <target name="compile-tests" depends="compile"
          description="Compile all test code">
    <javac classpathref="compile-test.path"
           source="${jdk-version}"
           target="${jdk-version}"
           destdir="${test.classes}" 
           deprecation="on" debug="${debug}">
      <src path="${test.src}"/>
    </javac>
    <copy toDir="${test.classes}">
      <fileset dir="${test.src}" includes="**/*.png **/*.gif"/>
    </copy>
  </target>

  <target name="test" depends="compile-tests"
          description="Run all unit tests">
    <property name="test.fork" value="yes"/>
    <property name="reports.junit" location="${reports}/junit"/>
    <property name="results.junit" location="${build}/junit-results"/>
    <mkdir dir="${results.junit}"/>
    <echo>Saving test results in ${results.junit}</echo>
    <junit printsummary="yes" fork="${test.fork}">
      <classpath><path refid="test.runpath"/></classpath>
      <formatter type="xml"/>
      <batchtest todir="${results.junit}">
        <fileset dir="${test.src}">
          <!-- auto-include everything -->
          <include name="**/*Test.java"/>
        </fileset>
      </batchtest>
    </junit>
    <junitreport todir="${results.junit}">
      <fileset dir="${results.junit}">
        <include name="TEST-*.xml"/>
      </fileset>
      <report todir="${reports.junit}"/>
    </junitreport>
    <echo>View test report in file://${reports.junit}/index.html</echo>
  </target>

  <target name="unit-test" depends="compile-tests"
          description="Run test class defined by -Dunit.test=">
    <property name="unit.test.fork" value="yes"/>
    <junit printsummary="yes" fork="${unit.test.fork}">
      <classpath><path refid="test.runpath"/></classpath>
      <formatter type="brief" usefile="false"/>
      <test name="${unit.test}"/>
    </junit>
  </target>

  <target name="with.clover" description="Enable code coverage for tests">
    <taskdef resource="clovertasks"/>
    <property name="build" value="build.clover"/>
    <property name="clover.include" value="**/*.java"/>
    <clover-setup initString="${build}/coverage.db">
      <fileset dir="${src}" includes="${clover.include}"/>
    </clover-setup>
  </target>

  <target name="clover" depends="with.clover,test"
          description="Generate test code coverage reports">
    <property name="reports.clover" value="${reports}/clover"/>
    <mkdir dir="${reports.clover}"/>
    <clover-report>
      <current outfile="${reports.clover}" title="clover">
        <format type="html"/>
      </current>
    </clover-report>
    <echo>Reports generated in ${reports.clover}</echo>
  </target>

  <target name="javadoc" depends="setup">
    <property name="header"
              value="&lt;b&gt;${name} API&lt;/&gt;&lt;font size=&quot;-1&quot;&gt;&lt;/font&gt;"/>
    <property name="footer"
              value="&lt;center&gt;&lt;i&gt;${name} is a trademark of ${company.full} in the US and other countries.&lt;br&gt;${copyright}&lt;/i&gt;&lt;/center&gt;"/>

    <mkdir dir="${doc}/api"/>
    <javadoc package="true"
             windowtitle="${company} ${name} API"
             sourcepathref="src.path"
             classpathref="compile.path"
             maxmemory="256m"
             destdir="${doc}/api">
      <!-- stylesheetfile="${stylesheet}" -->
      <doctitle>${name} API Documentation</doctitle>
      <header>${header}</header>
      <bottom>${footer}</bottom>
      <link href="http://java.sun.com/j2se/1.4.2/docs/api/"/>
      <link href="http://www.junit.org/junit/javadoc/3.8.1"/>
      <link href="http://abbot.sf.net/doc/api"/>

      <packageset dir="${src}" defaultexcludes="yes">
        <patternset>
          <include name="furbelow/**"/>
        </patternset>
      </packageset>

    </javadoc>
  </target>

  <target name="clean" depends="dynamic-properties">
    <delete quiet="true" includeEmptyDirs="true">
      <fileset dir="${build}"/>
      <fileset dir="${doc}/api"/>
      <fileset dir="." includes="*~,**/*~"/>
    </delete>
  </target>

</project>
